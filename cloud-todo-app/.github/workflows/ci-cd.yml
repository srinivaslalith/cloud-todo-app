name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend deps
        run: |
          pip install -r backend/requirements.txt

      - name: Lint backend
        run: |
          python -m compileall backend

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME || github.actor }}
          password: ${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/backend.Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/cloud-todo-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ../docker/frontend.Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/cloud-todo-frontend:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Write kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Apply K8s manifests
        run: |
          kubectl apply -f k8s-manifests/secret.sample.yaml
          kubectl apply -f k8s-manifests/configmap.yaml
          kubectl apply -f k8s-manifests/backend-deployment.yaml
          kubectl apply -f k8s-manifests/frontend-deployment.yaml
          kubectl apply -f k8s-manifests/postgres-statefulset.yaml
          kubectl apply -f k8s-manifests/postgres-service.yaml
